"""Add video_file table

Revision ID: 2e8a8e95772e
Revises: 6a72ba0df002
Create Date: 2017-04-16 23:37:28.164781

"""

# revision identifiers, used by Alembic.
revision = '2e8a8e95772e'
down_revision = '6a72ba0df002'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import re
import yaml
from uuid import uuid4
from utils.VideoManager import video_manager


def __is_uuid4(str):
    match = re.match('^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$', str, re.U | re.I)
    return match is not None


def get_base_path():
    fr = open('./config/config.yml', 'r')
    config = yaml.load(fr)
    return config['download']['location']


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    video_file_table = op.create_table('video_file',
                                       sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                                       sa.Column('bangumi_id', postgresql.UUID(as_uuid=True), nullable=False),
                                       sa.Column('episode_id', postgresql.UUID(as_uuid=True), nullable=False),
                                       sa.Column('file_name', sa.String(), nullable=True),
                                       sa.Column('file_path', sa.String(), nullable=True),
                                       sa.Column('torrent_id', sa.String(), nullable=True),
                                       sa.Column('download_url', sa.String(), nullable=True),
                                       sa.Column('status', sa.Integer(), nullable=False),
                                       sa.Column('resolution_w', sa.Integer(), nullable=True),
                                       sa.Column('resolution_h', sa.Integer(), nullable=True),
                                       sa.Column('duration', sa.Integer(), nullable=True),
                                       sa.Column('label', sa.String(), nullable=True),
                                       sa.ForeignKeyConstraint(['bangumi_id'], ['bangumi.id'], ),
                                       sa.ForeignKeyConstraint(['episode_id'], ['episodes.id'], ),
                                       sa.PrimaryKeyConstraint('id')
                                       )
    # ### end Alembic commands ###

    connection = op.get_bind()
    result = connection.execute(sa.text(
        'SELECT t.episode_id, t.torrent_id, t.file_path, eps.bangumi_id, eps.episode_no FROM torrentfile t LEFT JOIN episodes eps ON eps.id = t.episode_id WHERE file_path NOTNULL'))
    video_file_list = []
    for row in result:
        video_file = {
            'id': uuid4(),
            'status': 3
        }
        if row[1] == -1 or __is_uuid4(row[1]):
            video_file['torrent_id'] = None
        else:
            video_file['torrent_id'] = row[1]
        video_file['episode_id'] = row[0]
        video_file['file_path'] = row[2]
        video_file['bangumi_id'] = row[3]

        meta_info = video_manager.get_video_meta(
            u'{0}/{1}/{2}'.format(get_base_path(), str(video_file['bangumi_id']), video_file['file_path']))

        if meta_info is None:
            continue

        video_file['resolution_w'] = meta_info.get('width')
        video_file['resolution_h'] = meta_info.get('height')
        video_file['duration'] = meta_info.get('duration')

        video_file_list.append(video_file)

    op.bulk_insert(video_file_table, video_file_list)

    connection.execute(sa.text('UPDATE episodes SET status = 0 WHERE status = 1'))


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('video_file')
    # ### end Alembic commands ###
